name: Build and Deploy Next.js SSR App to Azure Web App - lifex-app

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read

    env:
      EMAIL_USER:                       ${{ secrets.EMAIL_USER }}
      EMAIL_PASS:                       ${{ secrets.EMAIL_PASS }}
      COSMOS_ENDPOINT:                  ${{ secrets.COSMOS_ENDPOINT }}
      COSMOS_KEY:                       ${{ secrets.COSMOS_KEY }}
      COSMOS_DATABASE:                  ${{ secrets.COSMOS_DATABASE }}
      COSMOS_CONTAINER:                 ${{ secrets.COSMOS_CONTAINER }}
      NEXT_PUBLIC_SITE_URL:             ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      AZURE_STORAGE_CONNECTION_STRING:  ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      AZURE_STORAGE_CONTAINER_NAME:     ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
      AZURE_STORAGE_ACCOUNT_NAME:       ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install

      - name: Validate NEXT_PUBLIC_SITE_URL
        run: |
          if [ -z "$NEXT_PUBLIC_SITE_URL" ]; then
            echo "‚ùå NEXT_PUBLIC_SITE_URL is not set."
            exit 1
          fi

      - name: Debug Environment Variables
        run: echo "NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL"

      - name: Build Next.js app
        run: npm run build

      - name: Prepare deployment package
        run: |
          mkdir -p deploy

          # Copy the standalone build (standalone/ includes its own package.json & server.js)
          cp -r .next/standalone/* deploy/

          # Copy your static assets into the same structure
          mkdir -p deploy/.next/static
          cp -r .next/static/* deploy/.next/static/

          # Copy public/ contents
          if [ -d public ]; then
            mkdir -p deploy/public
            cp -r public/* deploy/public/
          fi

          # (Optional) Copy next.config.js or .ts if you need it at runtime
          cp next.config.ts deploy/

      - name: Zip deployment package
        run: cd deploy && zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Azure Login using Publish Profile
        uses: azure/login@v1
        with:
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DCC377C08C7C488A9E33D7D1BDB165D1 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'lifex-app'
          package: .
